CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

MACRO(CREATE_TESTS BACKEND)
    STRING(TOUPPER ${BACKEND} DEF_NAME)

    FOREACH(FILE ${FILES})
        GET_FILENAME_COMPONENT(FNAME ${FILE} NAME_WE)
        SET(TEST_NAME ${FNAME}_${BACKEND})

        ADD_TEST(Test_${TEST_NAME} ${TEST_NAME})
        ADD_EXECUTABLE(${TEST_NAME} ${FNAME}.cpp)
        TARGET_LINK_LIBRARIES(${TEST_NAME}  af${BACKEND}
                      ${THREAD_LIB_FLAG}
                      ${GTEST_LIBRARIES})
        SET_TARGET_PROPERTIES(${TEST_NAME} PROPERTIES COMPILE_FLAGS -DAF_${DEF_NAME})
    ENDFOREACH()

ENDMACRO(CREATE_TESTS)

FIND_PACKAGE(Threads REQUIRED)
IF(CMAKE_USE_PTHREADS_INIT AND NOT "${APPLE}")
    SET(THREAD_LIB_FLAG "-pthread")
ELSE()
    SET(THREAD_LIB_FLAG ${CMAKE_THREAD_LIBS_INIT})
ENDIF()

IF(${USE_SYSTEM_GTEST})
    FIND_PACKAGE(GTest REQUIRED)
ELSE()
    INCLUDE("${CMAKE_MODULE_PATH}/build_gtest.cmake")
ENDIF()
INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})

SET(TESTDATA_SOURCE_DIR "${CMAKE_SOURCE_DIR}/test/data")
ADD_DEFINITIONS("-D TEST_DIR=\"\\\"${TESTDATA_SOURCE_DIR}\\\"\"")

# Check if data exists
IF (EXISTS "${TESTDATA_SOURCE_DIR}" AND IS_DIRECTORY "${TESTDATA_SOURCE_DIR}"
    AND EXISTS "${TESTDATA_SOURCE_DIR}/README.md")
    # Test data is available
    # Do Nothing
ELSE (EXISTS "${TESTDATA_SOURCE_DIR}" AND IS_DIRECTORY "${TESTDATA_SOURCE_DIR}"
    AND EXISTS "${TESTDATA_SOURCE_DIR}/README.md")
    MESSAGE(WARNING "Test Data is not available. Tests will build but fail when run.")
    MESSAGE("Did you miss the --recursive option when cloning?")
    MESSAGE("Run the following commands to correct this:")
    MESSAGE("git submodule init")
    MESSAGE("git submodule update")
    MESSAGE("git submodule foreach git pull origin master")
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
FILE(GLOB FILES "*.cpp")

IF(${BUILD_CPU})
    CREATE_TESTS(cpu)
ENDIF()

IF(${BUILD_CUDA})
    CREATE_TESTS(cuda)
ENDIF()

IF(${BUILD_OPENCL})
    CREATE_TESTS(opencl)
ENDIF()
